{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/helpers/helpers.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","value","filterReducer","query","status","todos","message","todosReducer","items","isLoading","error","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","setTodo","useCallback","filteredTodos","useMemo","trimQuery","trim","title","toLowerCase","includes","completed","getFilteredTodos","listOfTodos","map","className","id","onClick","length","TodoFilter","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","user","setUser","fetchUser","a","foundUser","useEffect","href","email","name","App","fetchTodos","data","Root","ReactDOM","render","document","getElementById"],"mappings":"mOAoBaA,EANG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAIED,EARM,iBAAyB,CAAEE,KAAM,uBA2BrCE,EAdY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,qBACH,OAAO,KACT,IAAK,kBACH,OAAOI,EAAOH,QAChB,QACE,OAAOE,I,OCpBAL,EAVc,SAACO,GAAD,MAAwC,CACjEL,KAAM,gBACNC,QAASI,IAQEP,EALa,SAACO,GAAD,MAAuC,CAC/DL,KAAM,eACNC,QAASI,IA6BIC,EAdO,WAGhB,IAFJH,EAEG,uDAFY,CAAEI,MAAO,GAAIC,OAAQ,OACpCJ,EACG,uCACH,OAAQA,EAAOJ,MACb,IAAK,eACH,OAAO,2BAAKG,GAAZ,IAAmBI,MAAOH,EAAOH,UACnC,IAAK,gBACH,OAAO,2BAAKE,GAAZ,IAAmBK,OAAQJ,EAAOH,UACpC,QACE,OAAOE,ICjBAL,EAdc,iBAAiC,CAC1DE,KAAM,kBAaKF,EAVI,SAACW,GAAD,MAAgD,CAC/DT,KAAM,eACNC,QAASQ,IAQEX,EALS,SAACY,GAAD,MAAiD,CACrEV,KAAM,cACNC,QAASS,IA+BIC,EApBM,WAOf,IANJR,EAMG,uDANY,CAAES,MAAO,GAAIC,WAAW,EAAOC,MAAO,IACrDV,EAKG,uCACH,OAAQA,EAAOJ,MACb,IAAK,gBACH,OAAO,2BAAKG,GAAZ,IAAmBU,WAAW,IAChC,IAAK,eACH,OAAO,2BAAKV,GAAZ,IAAmBU,WAAW,EAAOD,MAAOR,EAAOH,UACrD,IAAK,cACH,OAAO,2BAAKE,GAAZ,IAAmBU,WAAW,EAAOC,MAAOV,EAAOH,UACrD,QACE,OAAOE,ICpCPY,EAAcC,0BAAgB,CAClCC,YAAaf,EACbgB,OAAQZ,EACRG,MAAOE,IAIIQ,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,qCCfPC,G,YAAoCC,KACpCC,EAAkDC,I,OCIlDC,EAAW,WACtB,IAAMC,EAAWL,IACjB,EAAoDE,GAClD,SAACvB,GAAD,MAAW,CAACA,EAAMc,YAAad,EAAMM,MAAON,EAAMe,WADpD,mBAAOD,EAAP,KAAsBL,EAAtB,KAAsBA,MAAtB,OAAiCL,EAAjC,EAAiCA,MAAOC,EAAxC,EAAwCA,OAIlCsB,EAAUC,uBACd,SAAChC,GAAD,OAAgB8B,EAAS/B,EAAgBC,MACzC,IAGIiC,EAAgBC,mBACpB,kBChB4B,SAC9B1B,EACAC,EACAC,GAEA,IAAMyB,EAAY3B,EAAM4B,OACpBH,EAAgBvB,EAMpB,OAJIyB,IACFF,EAAgBA,EAAcd,QAAO,SAACnB,GAAD,OAAUA,EAAKqC,MAAMC,cAAcC,SAASJ,EAAUG,mBAGrF7B,GACN,IAAK,SACH,OAAOwB,EAAcd,QAAO,SAACnB,GAAD,OAAWA,EAAKwC,aAC9C,IAAK,YACH,OAAOP,EAAcd,QAAO,SAACnB,GAAD,OAAUA,EAAKwC,aAC7C,QACE,OAAOP,GDFHQ,CAAiBjC,EAAOC,EAAQI,KACtC,CAACA,EAAOL,EAAOC,IAGXiC,EAAcR,mBAClB,kBAAMD,EAAcU,KAAI,SAAC3C,GAAD,OACtB,qBAAI,UAAQ,OAAZ,UACE,oBAAI4C,UAAU,eAAd,SAA8B5C,EAAK6C,KACnC,oBAAID,UAAU,eAAd,SACG5C,EAAKwC,WACJ,sBAAMI,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UACE5C,EAAKwC,UAAY,mBAAqB,kBAF1C,SAKGxC,EAAKqC,UAIV,oBAAIO,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV3C,KAAK,SACL6C,QAAS,kBAAMf,EAAQ/B,IAJzB,SAME,sBAAM4C,UAAU,OAAhB,SACE,mBACEA,UAAS,cACP5C,EAAK6C,MAAL,OAAY3B,QAAZ,IAAYA,OAAZ,EAAYA,EAAa2B,IAAK,eAAiB,oBA9BnC7C,EAAK6C,SAsC/B,CAACZ,IAGH,OACE,mCACGA,EAAcc,OAAS,EACtB,wBAAOH,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCAAQF,OAGV,mBAAGE,UAAU,0BAAb,oEEnFKI,EAAuB,WAClC,IAAMlB,EAAWL,IACTjB,EAAUmB,GAAe,SAACvB,GAAD,OAAWA,EAAMe,UAA1CX,MAcR,OACE,uBACEoC,UAAU,mBACVK,SAAU,SAACC,GAAD,OAAWA,EAAMC,kBAF7B,UAIE,mBAAGP,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBAAQ,UAAQ,eAAeQ,SAXf,SAAC,GAAD,IACZ9C,EADY,EACtB+C,OAAU/C,MADY,OAEcwB,EAAS/B,EAA2BO,KASlE,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGsC,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR3C,KAAK,OACL2C,UAAU,QACVtC,MAAOE,EACP8C,YAAY,YACZF,SAlCS,SAAC,GAA0D,IAA9C9C,EAA6C,EAAvD+C,OAAU/C,MAC5BwB,EAAS/B,EAA0BO,OAmC/B,sBAAMsC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdpC,GACC,sBAAMoC,UAAU,gBAAgBW,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRvD,KAAK,SACL2C,UAAU,SACVE,QA3CO,WACjBhB,EAAS/B,EAA0B,iBCZ1B0D,G,MAAmB,kBAC9B,qBAAKb,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASc,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KCflDC,EAAY,WACvB,IAAMrD,EAAcS,GAAe,SAACvB,GAAD,OAAWA,EAAMc,eACpD,EAAwBsD,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACM5C,EAAWL,IAEjB,EAEIP,EADFoD,EADF,EACEA,OAAQjC,EADV,EACUA,MAAOG,EADjB,EACiBA,UAAWK,EAD5B,EAC4BA,GAKtB8B,EAAS,uCAAG,4BAAAC,EAAA,sEACQP,EAAQC,GADhB,OACVO,EADU,OAGhBH,EAAQG,GAHQ,2CAAH,qDAUf,OAJAC,qBAAU,WACRH,MACC,IAGD,sBAAK/B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb6B,EAGA,sBAAK7B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYC,KAIZ,wBACE5C,KAAK,SACL2C,UAAU,SACV,UAAQ,cACRE,QAjCO,kBAAMhB,EAAS/B,WAqC1B,sBAAK6C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGP,IAGH,oBAAGO,UAAU,QAAQ,UAAQ,aAA7B,UACGJ,EACC,wBAAQI,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OACD,mBAAGmC,KAAI,iBAAYN,EAAKO,OAAxB,SAAkCP,EAAKQ,gBAjC7C,cAAC,EAAD,QCrBKC,EAAgB,WAC3B,IAAMpD,EAAWL,IACjB,EAAqCE,GAAe,SAACvB,GAAD,MAAW,CAACA,EAAMM,MAAON,EAAMc,gBAAnF,mBAASJ,EAAT,KAASA,UAAaI,EAAtB,KAEMiE,EAAU,uCAAG,4BAAAP,EAAA,6DACjB9C,EAAS/B,KADQ,kBFIS2D,EAAY,UEJrB,OAIT0B,EAJS,OAMftD,EAAS/B,EAAiBqF,IANX,gDAQftD,EAAS/B,EAAsB,yBARhB,yDAAH,qDAgBhB,OAJA+E,qBAAU,WACRK,MACC,IAGD,qCACE,qBAAKvC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACG9B,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,aAOTI,GAAe,cAAC,EAAD,QC9ChBmE,EAAO,kBACX,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNkE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.1e6419a8.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype ChangeStatusAction = { type: 'filter/STATUS'; payload: Status };\ntype ChangeQueryAction = { type: 'filter/QUERY'; payload: string };\n\nconst changeFilterStatus = (value: Status): ChangeStatusAction => ({\n  type: 'filter/STATUS',\n  payload: value,\n});\n\nconst changeFilterQuery = (value: string): ChangeQueryAction => ({\n  type: 'filter/QUERY',\n  payload: value,\n});\n\nexport const actions = {\n  changeFilterStatus,\n  changeFilterQuery,\n};\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\ntype Action = ChangeQueryAction | ChangeStatusAction;\n\nconst filterReducer = (\n  state: State = { query: '', status: 'all' },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype StartFetchingTodosAction = { type: 'todos/LOADING' };\ntype SuccessFetchingTodosAction = { type: 'todos/LOADED'; payload: Todo[] };\ntype FailedFetchingTodosAction = { type: 'todos/ERROR'; payload: string };\n\nconst startFetchingTodos = (): StartFetchingTodosAction => ({\n  type: 'todos/LOADING',\n});\n\nconst setTodos = (todos: Todo[]): SuccessFetchingTodosAction => ({\n  type: 'todos/LOADED',\n  payload: todos,\n});\n\nconst setTodosError = (message: string): FailedFetchingTodosAction => ({\n  type: 'todos/ERROR',\n  payload: message,\n});\n\nexport const actions = { startFetchingTodos, setTodos, setTodosError };\n\ntype State = { items: Todo[]; isLoading: boolean; error: string };\ntype Action =\n  | StartFetchingTodosAction\n  | SuccessFetchingTodosAction\n  | FailedFetchingTodosAction;\n\nconst todosReducer = (\n  state: State = { items: [], isLoading: false, error: '' },\n  action: Action,\n): {\n  items: Todo[];\n  isLoading: boolean;\n  error: string;\n} => {\n  switch (action.type) {\n    case 'todos/LOADING':\n      return { ...state, isLoading: true };\n    case 'todos/LOADED':\n      return { ...state, isLoading: false, items: action.payload };\n    case 'todos/ERROR':\n      return { ...state, isLoading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport { useCallback, useMemo } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { getFilteredTodos } from '../helpers/helpers';\n\nexport const TodoList = () => {\n  const dispatch = useAppDispatch();\n  const [currentTodo, { items }, { query, status }] = useAppSelector(\n    (state) => [state.currentTodo, state.todos, state.filter],\n  );\n\n  const setTodo = useCallback(\n    (todo: Todo) => dispatch(actions.setTodo(todo)),\n    [],\n  );\n\n  const filteredTodos = useMemo(\n    () => getFilteredTodos(query, status, items),\n    [items, query, status],\n  );\n\n  const listOfTodos = useMemo(\n    () => filteredTodos.map((todo) => (\n      <tr data-cy=\"todo\" key={todo.id}>\n        <td className=\"is-vcentered\">{todo.id}</td>\n        <td className=\"is-vcentered\">\n          {todo.completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={\n              todo.completed ? 'has-text-success' : 'has-text-danger'\n            }\n          >\n            {todo.title}\n          </p>\n        </td>\n\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setTodo(todo)}\n          >\n            <span className=\"icon\">\n              <i\n                className={`far ${\n                  todo.id === currentTodo?.id ? 'fa-eye-slash' : 'fa-eye'\n                }`}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    )),\n    [filteredTodos],\n  );\n\n  return (\n    <>\n      {filteredTodos.length > 0 ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>{listOfTodos}</tbody>\n        </table>\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\nexport const getFilteredTodos = (\n  query: string,\n  status: Status,\n  todos: Todo[],\n) => {\n  const trimQuery = query.trim();\n  let filteredTodos = todos;\n\n  if (trimQuery) {\n    filteredTodos = filteredTodos.filter((todo) => todo.title.toLowerCase().includes(trimQuery.toLowerCase()));\n  }\n\n  switch (status) {\n    case 'active':\n      return filteredTodos.filter((todo) => !todo.completed);\n    case 'completed':\n      return filteredTodos.filter((todo) => todo.completed);\n    default:\n      return filteredTodos;\n  }\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector((state) => state.filter);\n\n  const setQuery = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.changeFilterQuery(value));\n  };\n\n  const clearQuery = () => {\n    dispatch(actions.changeFilterQuery(''));\n  };\n\n  const setFilterStatus = ({\n    target: { value },\n  }: ChangeEvent<HTMLSelectElement>) => dispatch(actions.changeFilterStatus(value as Status));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={setFilterStatus}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={setQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoModal = () => {\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  const {\n    userId, title, completed, id,\n  } = currentTodo as Todo;\n\n  const removeTodo = () => dispatch(actions.removeTodo());\n\n  const fetchUser = async () => {\n    const foundUser = await getUser(userId);\n\n    setUser(foundUser);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [{ isLoading }, currentTodo] = useAppSelector((state) => [state.todos, state.currentTodo]);\n\n  const fetchTodos = async () => {\n    dispatch(actions.startFetchingTodos());\n\n    try {\n      const data = await getTodos();\n\n      dispatch(actions.setTodos(data));\n    } catch (err) {\n      dispatch(actions.setTodosError('Something went wrong'));\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}